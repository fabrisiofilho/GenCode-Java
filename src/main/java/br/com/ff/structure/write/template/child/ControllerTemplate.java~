package br.com.ff.structure.write.template.child;

import br.com.ff.structure.write.template.Template;

public class ControllerTemplate extends Template {

    private static final String TEMPLATE =
            """
            package {{PACKAGE}};
        
            {{IMPORTS}}
            
            @RestController
            @RequestMapping("{{PATH}}")
            @RequiredArgsConstructor
            public class {{CLASS_NAME}} {
            
            private final {{SERVICE_CLASS}} service;
            
            @GetMapping("/{id}")
            public ResponseEntity<{{DTO_CLASS}}> findById(@PathVariable {{ID_TYPE}} id) {
                return ResponseEntity.ok(service.findById(id));
            }
            
            @GetMapping
            public ResponseEntity<List<{{DTO_CLASS}}>> findAll() {
                return ResponseEntity.ok(service.findAll());
            }
            
            @PostMapping
            public ResponseEntity<{{DTO_CLASS}}> create(@RequestBody {{DTO_CLASS}} dto) {
                return ResponseEntity.ok(service.create(dto));
            }
            
            @PutMapping("/{id}")
            public ResponseEntity<{{DTO_CLASS}}> update(@PathVariable {{ID_TYPE}} id, @RequestBody {{DTO_CLASS}} dto) {
                return ResponseEntity.ok(service.update(id, dto));
            }
            
            @DeleteMapping("/{id}")
            public ResponseEntity<Void> delete(@PathVariable {{ID_TYPE}} id) {
                service.delete(id);
                return ResponseEntity.noContent().build();
            }
            
            @PatchMapping("/{id}/status")
            public ResponseEntity<{{DTO_CLASS}}> alterStatus(@PathVariable {{ID_TYPE}} id, @RequestParam String status) {
                return ResponseEntity.ok(service.alterStatus(id, status));
            }
            
            }
            """;

    private static final String SUFFIX =
        """
        Controller
        """;

    public ControllerTemplate() {
        super(TEMPLATE, null, SUFFIX);
    }
}
